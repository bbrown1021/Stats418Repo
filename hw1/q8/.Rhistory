matplot(y = cumData[,-1], type = 'l',
xlab = "Date",
ylab = "Cumulative Sales",
col=col,
axes = FALSE)
yticks <- seq(0,80000, 10000)
axis(2,at=yticks,labels=T, las = 2, cex.axis = 0.8)
xticks <- seq(0,1100, 90)
xlabs <- c("Jan17","Apr17", "July17","Oct17",
"Jan18","Apr18", "July18","Oct18",
"Jan19","Apr19", "July19","Oct19","Jan20")
axis(1,at=xticks,labels=xlabs, las = 2, cex.axis = 0.8)
grid(NULL,NULL)
legend("topleft",
colnames(cumData[,-1]),
col=col,
cex=0.7,
fill=col)
dev.off()
daily.pnl <- cars
nn <- ncol(daily.pnl)
layout(matrix(c(1,2),nrow=1), width=c(4,1))
par(mar=c(5,4,4,0)) #No margin on the right side
matplot(cumsum(as.data.frame(daily.pnl)),type="l")
par(mar=c(5,0,4,2)) #No margin on the left side
plot(c(0,1),type="n", axes=F, xlab="", ylab="")
legend("center", colnames(daily.pnl),col=seq_len(nn),cex=0.8,fill=seq_len(nn))
dat <- matrix(runif(40,1,20),ncol=4) # make data
dat
matplot(dat, type = c("b"),pch=1,col = 1:4) #plot
legend("topleft", legend = 1:4, col=1:4, pch=1) # optional legend
df
df_dates
df_dates
df$Date
weekdays(df$Date)
df$day <- weekdays(df$Date)
df
df[which(df$day == "Sunday"),]
df2 <- df[which(df$day == "Sunday"),-1]
df2
colSums(df2)
colSums(df2[,-c("day")])
df2[,-c("day")]
df2
df2[,-"day"]
df2[,-c("day")]
df2[,-c("day")]
df2
df2[,-12]
df2[,1:10]
colSums(df2[,1:10])
colSums(df2[,1:10], na.rm = TRUE)
df3 <- colSums(df2[,1:10], na.rm = TRUE)
order(df3)
df3[order(df3)]
df3[-order(df3)]
df3[order(-df3)]
df3[order(-df3)][1]
as.data.frame(df3[order(-df3)][1])
rownames(as.data.frame(df3[order(-df3)][1]))
df_dates
df_dates[which(df_dates$month == 12)]
df_dates[which(df_dates$month == 12),]
df_totalsales <- df_dates[which(df_dates$month == 12),-1]
df_totalsales
df_totalsales[,1:10]
cumsum(df_totalsales[,1:10])
colsum(df_totalsales[,1:10])
colSums(df_totalsales[,1:10])
colSums(df_totalsales[,1:10], na.rm = TRUE)
as.data.frame(colSums(df_totalsales[,1:10], na.rm = TRUE))
as.data.frame(means = colSums(df_totalsales[,1:10], na.rm = TRUE))
data.frame(means = colSums(df_totalsales[,1:10], na.rm = TRUE))
df_totalsales <- data.frame(means = colSums(df_totalsales[,1:10], na.rm = TRUE))
df_totalsales
order(df_totalsales)
df_totalsales[order(df_totalsales)]
df_totalsales[order(df_totalsales),]
df_totalsales
df_totalsales.sort_values("means")
totalsales <- df_dates[which(df_dates$month == 12),-1]
totalsales <- data.frame(means = colSums(df_totalsales[,1:10], na.rm = TRUE))
totalsales.sort_values("means")
totalsales <- data.frame(means = colSums(totalsales[,1:10], na.rm = TRUE))
totalsales.sort_values("means")
totalsales
totalsales[order(means),]
totalsales[order(totalsales$means),]
totalsales
totalsales <- data.frame(means = colSums(totalsales[,1:10], na.rm = TRUE), index = FALSE)
totalsales$store <- rownames(totalsales)
totalsales
totalsales(index = FALSE)
rownames(totalsales) <- NULL
totalsales
totalsales[order(means),]
totalsales[order(totalsales$means),]
totalsales[order(totalsales$means),1:3]
totalsales[order(totalsales$means),c(1:3)]
totalsales[order(totalsales$means),]
orderedsales <- totalsales[order(totalsales$means),]
orderedsales[,1:#]
orderedsales[,1:3]
orderedsales[,1:3]
orderedsales[,c(1:3)]
orderedsales[c(1:3),]
orderedsales[c(1:3),2]
df
original
df <- original
df
df <- original[,01]
df <- original[,-1]
df
df3 <- original
df3
strftime(df3$Date, format = "%V")
df3$Week <- strftime(df3$Date, format = "%V")
df3
df3$Year <- strftime(df3$Date, format = "%Y")
df3
df3[which(df$Year == "2019"),]
df3[which(df3$Year == "2019"),]
df3 <- df3[which(df3$Year == "2019"),]
df3
df3 <- df3[which(df3$Year == "2019"),-1]
df3
df3[,1:10]
rowSums(df3[,1:10])
df3[,1:10]
original
original <-  read.csv("TV-Sales.csv", stringsAsFactors=FALSE)
df <- original
original
# change to numeric
change_to_int <- colnames(df)[-1]
for(i in 1:length(change_to_int)){
df[,change_to_int[i]] <- as.numeric(df[,change_to_int[i]])}
# converting to datetime object
df[['Date']] <- as.POSIXct(df[['Date']],format = "%Y-%m-%d")
head(df)
library(tidyverse)
library(dplyr)
original <-  read.csv("TV-Sales.csv", stringsAsFactors=FALSE)
df <- original
# change to numeric
change_to_int <- colnames(df)[-1]
for(i in 1:length(change_to_int)){
df[,change_to_int[i]] <- as.numeric(df[,change_to_int[i]])}
# converting to datetime object
df[['Date']] <- as.POSIXct(df[['Date']],format = "%Y-%m-%d")
head(df)
df_dates <- df %>% dplyr::mutate(year = lubridate::year(Date),
month = lubridate::month(Date),
day = lubridate::day(Date))
df_2017 <- df_dates[which(df_dates$year == 2017),-c(1,12,13,14)]
means_2017 <- as.data.frame(colMeans(df_2017, na.rm = TRUE))
means_2017 <- cbind(store = rownames(means_2017), means_2017)
colnames(means_2017)[2] <- "means"
means_2017[which(means_2017$means == max(means_2017$means)),1]
library(matrixStats)
dailyvar <- rowVars(as.matrix(df[,-1]), na.rm = TRUE)
maxvar <- max(dailyvar)
df[which(dailyvar == maxvar),'Date']
df$Year <- format(df$Date, format="%Y")
highest_mean <- df %>% select(S5,Year) %>% group_by(Year) %>%
summarise(median = median(S5,na.rm = TRUE))
as.numeric(highest_mean[which(highest_mean$median == max(highest_mean$median)),'Year'])
df2 <- original
df2[is.na(df2)] <- 0 # replace NA with 0
tbl <- table(colnames(df2[,-1])[max.col(df2[,-1],ties.method="last")])
rownames(as.data.frame(tbl[order(-tbl)][1]))
stores <- as.data.frame(sapply(original[,-1],as.numeric))
cumSales <- colSums(stores, na.rm = TRUE)
rownames(as.data.frame(cumSales[order(-cumSales)][5]))
medians <- as.numeric(apply(stores, 2, median, na.rm = TRUE))
for(i in 1:10){
stores[,i][is.na(stores[,i])] <- medians[i]
}
new_data <- cbind(Date = original[,1],stores)
write.csv(new_data,"repaired.csv", row.names = FALSE)
cumData <- cbind(Date = new_data[,1],cumsum(new_data[,-1]))
# define color palette
library(RColorBrewer)
n <- 10
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
col=sample(col_vector, n)
jpeg(file="extra_plot.jpeg")
matplot(y = cumData[,-1], type = 'l',
xlab = "Date",
ylab = "Cumulative Sales",
col=col,
axes = FALSE)
yticks <- seq(0,80000, 10000)
axis(2,at=yticks,labels=T, las = 2, cex.axis = 0.8)
xticks <- seq(0,1100, 90)
xlabs <- c("Jan17","Apr17", "July17","Oct17",
"Jan18","Apr18", "July18","Oct18",
"Jan19","Apr19", "July19","Oct19","Jan20")
axis(1,at=xticks,labels=xlabs, las = 2, cex.axis = 0.8)
grid(NULL,NULL)
legend("topleft",
colnames(cumData[,-1]),
col=col,
cex=0.7,
fill=col)
dev.off()
df$day <- weekdays(df$Date)
df2 <- df[which(df$day == "Sunday"),-1]
df3 <- colSums(df2[,1:10], na.rm = TRUE)
rownames(as.data.frame(df3[order(-df3)][1]))
totalsales <- df_dates[which(df_dates$month == 12),-1]
totalsales <- data.frame(means = colSums(totalsales[,1:10], na.rm = TRUE))
totalsales$store <- rownames(totalsales)
rownames(totalsales) <- NULL
orderedsales <- totalsales[order(totalsales$means),]
orderedsales[c(1:3),2]
df2 <- original
df2[is.na(df2)] <- 0 # replace NA with 0
tbl <- table(colnames(df2[,-1])[max.col(df2[,-1],ties.method="last")])
rownames(as.data.frame(tbl[order(-tbl)][1]))
df3 <- original
df3$Week <- strftime(df3$Date, format = "%V")
df3$Year <- strftime(df3$Date, format = "%Y")
df3 <- df3[which(df3$Year == "2019"),-1]
rowSums(df3[,1:10])
df
df3 <- df
df3$Week <- strftime(df3$Date, format = "%V")
df3$Year <- strftime(df3$Date, format = "%Y")
df3 <- df3[which(df3$Year == "2019"),-1]
rowSums(df3[,1:10])
rowSums(df3[,1:10], na.rm = TRUE)
df3$totals <- rowSums(df3[,1:10], na.rm = TRUE)
df3
df3[,c("Week","totals")]
df3[which(df3$totals == max(df3$totals)),c("Week","totals")]
df3 <- df
df3$Week <- strftime(df3$Date, format = "%V")
df3$Year <- strftime(df3$Date, format = "%Y")
df3 <- df3[which(df3$Year == "2019"),-1]
df3$totals <- rowSums(df3[,1:10], na.rm = TRUE)
df3
df
df3 <- df
df3
df3 <- df[,-c("Year","day")]
f
df
df3 <- df[,1:11]
df3 <- df[,1:11]
df3$Week <- strftime(df3$Date, format = "%V")
df3$Year <- strftime(df3$Date, format = "%Y")
df3 <- df3[which(df3$Year == "2019"),-1]
df3$totals <- rowSums(df3[,1:10], na.rm = TRUE)
df3
max(df3$totals)
which(df3$totals == max(df3$totals))
df3[which(df3$totals == max(df3$totals)),c("Week","totals")]
df3 <- df[,1:11]
df3$Week <- strftime(df3$Date, format = "%V")
df3$Year <- strftime(df3$Date, format = "%Y")
df3 <- df3[which(df3$Year == "2019"),]
df3$totals <- rowSums(df3[,1:10], na.rm = TRUE)
df3
df3 <- df[,1:11]
df3$Week <- strftime(df3$Date, format = "%V")
df3$Year <- strftime(df3$Date, format = "%Y")
df3[which(df3$Year == "2019"),-1]
df3 <- df3[which(df3$Year == "2019"),-1]
df3[,1:10]
df3$totals <- rowSums(df3[,1:10], na.rm = TRUE)
df3
df3 %>% group_by(Week)
df3 <- df[,1:11]
df3$Week <- strftime(df3$Date, format = "%V")
df3$Year <- strftime(df3$Date, format = "%Y")
df3 <- df3[which(df3$Year == "2019"),-1]
df3 %>% group_by(Week)
df3 <- df3 %>% group_by(Week)
df3 %>% group_by(Week)
df3 %>% group_by(Week) %>% summarise(totals = colSums())
df3 <- df[,1:11]
df3$Week <- strftime(df3$Date, format = "%V")
df3$Year <- strftime(df3$Date, format = "%Y")
df3 <- df3[which(df3$Year == "2019"),-1]
df3
df3 <- df3[,1:11]
df3
df3 <- df[,1:11]
df3$Week <- strftime(df3$Date, format = "%V")
df3$Year <- strftime(df3$Date, format = "%Y")
df3 <- df3[which(df3$Year == "2019"),-1]
df3 <- df3[,1:11]
df3
col_to_aggregate <- c("S1","S2","S3","S4","S5","S6","S7","S8","S9","S10")
df %>% group_by(means) %>% summarise(totals = sum(col_to_aggregate))
df3 %>% group_by(means) %>% summarise(totals = sum(col_to_aggregate))
df3
df3 %>% group_by(Week) %>% summarise(totals = sum(col_to_aggregate))
df3 %>% group_by(Week)
aggregate(df3[,1:10], list(df$Week), FUN=sum)
aggregate(df3[,1:10], list(df$Week), FUN=colSums)
df3 %>% group_by(Week) %>% summarise(totals = colSums(col_to_aggregate))
df3 %>% group_by(Week) %>% summarise(totals = colsum(col_to_aggregate))
df3 %>% group_by(Week)
df3 %>%
group_by(Week) %>%
summarise(sum(S1))
df3 %>%
group_by(Week) %>%
summarise(S1 = sum(S1),
S2 = sum(S2))
df3 %>%
group_by(Week) %>%
summarise(S1 = sum(S1),
S2 = sum(S2),
S3 = sum(S3),
S4 = sum(S4),
S5 = sum(S5),
S6 = sum(S6),
S7 = sum(S7),
S8 = sum(S8),
S9 = sum(S9),
S10 = sum(S10))
df3 <- df3 %>%
group_by(Week) %>%
summarise(S1 = sum(S1),
S2 = sum(S2),
S3 = sum(S3),
S4 = sum(S4),
S5 = sum(S5),
S6 = sum(S6),
S7 = sum(S7),
S8 = sum(S8),
S9 = sum(S9),
S10 = sum(S10))
df3 <- df[,1:11]
df3$Week <- strftime(df3$Date, format = "%V")
df3$Year <- strftime(df3$Date, format = "%Y")
df3 <- df3[which(df3$Year == "2019"),-1]
df3 <- df3[,1:11]
df3 <- df3 %>%
group_by(Week) %>%
summarise(S1 = sum(S1),
S2 = sum(S2),
S3 = sum(S3),
S4 = sum(S4),
S5 = sum(S5),
S6 = sum(S6),
S7 = sum(S7),
S8 = sum(S8),
S9 = sum(S9),
S10 = sum(S10))
df3
df[,2:11]
rowSums(df[,2:11])
rowSums(df[,2:11], na.rm = TRUE)
df3 <- df[,1:11]
df3$Week <- strftime(df3$Date, format = "%V")
df3$Year <- strftime(df3$Date, format = "%Y")
df3 <- df3[which(df3$Year == "2019"),-1]
df3 <- df3[,1:11]
df3 <- df3 %>%
group_by(Week) %>%
summarise(S1 = sum(S1),
S2 = sum(S2),
S3 = sum(S3),
S4 = sum(S4),
S5 = sum(S5),
S6 = sum(S6),
S7 = sum(S7),
S8 = sum(S8),
S9 = sum(S9),
S10 = sum(S10))
df3$totals <- rowSums(df[,2:11], na.rm = TRUE)
rowSums(df[,2:11], na.rm = TRUE)
df3$totals <- rowSums(df[,2:11], na.rm = TRUE)
totals <- rowSums(df[,2:11], na.rm = TRUE)
df3
df3 <- df[,1:11]
df3$Week <- strftime(df3$Date, format = "%V")
df3$Year <- strftime(df3$Date, format = "%Y")
df3 <- df3[which(df3$Year == "2019"),-1]
df3 <- df3[,1:11]
df3 <- df3 %>%
group_by(Week) %>%
summarise(S1 = sum(S1),
S2 = sum(S2),
S3 = sum(S3),
S4 = sum(S4),
S5 = sum(S5),
S6 = sum(S6),
S7 = sum(S7),
S8 = sum(S8),
S9 = sum(S9),
S10 = sum(S10))
df3$totals <- rowSums(df[,2:11], na.rm = TRUE)
df3
cbind(df3$Week,totals)
df3
df3 <- df[,1:11]
df3$Week <- strftime(df3$Date, format = "%V")
df3$Year <- strftime(df3$Date, format = "%Y")
df3 <- df3[which(df3$Year == "2019"),-1]
df3 <- df3[,1:11]
df4 <- df3 %>%
group_by(Week) %>%
summarise(S1 = sum(S1),
S2 = sum(S2),
S3 = sum(S3),
S4 = sum(S4),
S5 = sum(S5),
S6 = sum(S6),
S7 = sum(S7),
S8 = sum(S8),
S9 = sum(S9),
S10 = sum(S10))
df4$totals <- rowSums(df[,2:11], na.rm = TRUE)
df4$Week
length(df4$Week)
length(totals)
df[,2:11]
df3 <- df3 %>%
group_by(Week) %>%
summarise(S1 = sum(S1),
S2 = sum(S2),
S3 = sum(S3),
S4 = sum(S4),
S5 = sum(S5),
S6 = sum(S6),
S7 = sum(S7),
S8 = sum(S8),
S9 = sum(S9),
S10 = sum(S10))
df3$totals <- rowSums(df3[,2:11], na.rm = TRUE)
df3
df3[,c("Week","totals")]
df3 <- df3[,c("Week","totals")]
df3 <- df3 %>%
group_by(Week) %>%
summarise(S1 = sum(S1),
S2 = sum(S2),
S3 = sum(S3),
S4 = sum(S4),
S5 = sum(S5),
S6 = sum(S6),
S7 = sum(S7),
S8 = sum(S8),
S9 = sum(S9),
S10 = sum(S10))
df3 <- df[,1:11]
df3$Week <- strftime(df3$Date, format = "%V")
df3$Year <- strftime(df3$Date, format = "%Y")
df3 <- df3[which(df3$Year == "2019"),-1]
df3 <- df3[,1:11]
df3 <- df3 %>%
group_by(Week) %>%
summarise(S1 = sum(S1),
S2 = sum(S2),
S3 = sum(S3),
S4 = sum(S4),
S5 = sum(S5),
S6 = sum(S6),
S7 = sum(S7),
S8 = sum(S8),
S9 = sum(S9),
S10 = sum(S10))
df3$totals <- rowSums(df3[,2:11], na.rm = TRUE)
df3[which(df3$totals == max(df3$totals)),c("Week","totals")]
df3 <- df[,1:11]
df3$Week <- strftime(df3$Date, format = "%V")
df3$Year <- strftime(df3$Date, format = "%Y")
df3
s.numeric(strftime(df3$Date, format = "%V")) - 1
as.numeric(strftime(df3$Date, format = "%V")) - 1
df3 <- df[,1:11]
df3$Week <- as.numeric(strftime(df3$Date, format = "%V")) - 1 # to match python syntax
df3$Year <- strftime(df3$Date, format = "%Y")
df3 <- df3[which(df3$Year == "2019"),-1]
df3 <- df3[,1:11]
df3 <- df3 %>%
group_by(Week) %>%
summarise(S1 = sum(S1),
S2 = sum(S2),
S3 = sum(S3),
S4 = sum(S4),
S5 = sum(S5),
S6 = sum(S6),
S7 = sum(S7),
S8 = sum(S8),
S9 = sum(S9),
S10 = sum(S10))
df3$totals <- rowSums(df3[,2:11], na.rm = TRUE)
df3[which(df3$totals == max(df3$totals)),c("Week","totals")]
final <- df3[which(df3$totals == max(df3$totals)),c("Week","totals")]
final
final$Week
final
df3
df[,1:11]
df3 <- df[,1:11]
df3$Week <- as.numeric(strftime(df3$Date, format = "%V")) - 1 # to match python syntax
df3$Year <- strftime(df3$Date, format = "%Y")
df3 <- df3[which(df3$Year == "2019"),-1]
df3
df3 <- df[,1:11]
df3$Week <- as.numeric(strftime(df3$Date, format = "%V")) - 1 # to match python syntax
df3$Year <- strftime(df3$Date, format = "%Y")
df3
